{"version":3,"file":"static/js/357.050caeea.chunk.js","mappings":"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","sources":["components/Shared/UI/MenuForm/MenuForm.js","components/Home/components/MenuItem/MenuItem.js","components/Home/components/MenuList/MenuList.js","components/Home/components/Menu/Menu.js","components/Home/components/Quote/Quote.js","components/Home/Pages/Home.js","components/Shared/UI/Button/Button.js","components/Shared/UI/Card/Card.js","components/Shared/UI/Modal/Modal.js","components/Shared/hooks/useHttp.js"],"sourcesContent":["import React from 'react';\r\n\r\nimport Button from '../Button/Button';\r\nimport './MenuForm.css';\r\n\r\nconst MenuForm = React.forwardRef((props, ref) => {\r\n  return (\r\n    <div>\r\n      <form onSubmit={props.onSubmit}>\r\n        <div className=\"menu-form__div\">\r\n          <input\r\n            type=\"number\"\r\n            step=\"1\"\r\n            max=\"5\"\r\n            min=\"1\"\r\n            defaultValue={props.default || '1'}\r\n            ref={ref}\r\n          />\r\n          {!props.cart && <Button title=\"Add\" type=\"submit\" />}\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default MenuForm;\r\n","import React, { useContext } from 'react';\r\nimport { CartContext } from '../../../Shared/store/cart-context';\r\n\r\nimport MenuForm from '../../../Shared/UI/MenuForm/MenuForm';\r\nimport './MenuItem.css';\r\n\r\nconst MenuItem = (props) => {\r\n  const cartCtx = useContext(CartContext);\r\n  const menuFormRef = React.createRef();\r\n  const submitFormHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    cartCtx.addToCart({\r\n      ...props,\r\n      description: undefined,\r\n      quantity: +menuFormRef.current.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"menu-meal__item\">\r\n      <h4>{props.name}</h4>\r\n      <p>\r\n        <em>\"{props.description}\"</em>\r\n      </p>\r\n      <span>&#8377; {props.price}</span>\r\n      <MenuForm onSubmit={submitFormHandler} ref={menuFormRef} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MenuItem;\r\n","import React from 'react';\r\n\r\nimport MenuItem from '../MenuItem/MenuItem';\r\n\r\nconst MenuList = (props) => {\r\n  return (\r\n    <div>\r\n      {props.meals.map((m) => {\r\n        return (\r\n          <MenuItem\r\n            key={m._id}\r\n            id={m._id}\r\n            name={m.name}\r\n            price={m.price}\r\n            description={m.description}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MenuList;\r\n","import React, { useState } from 'react';\r\n\r\nimport './Menu.css';\r\nimport Card from '../../../Shared/UI/Card/Card';\r\nimport MenuList from '../MenuList/MenuList';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\n\r\nconst Menu = (props) => {\r\n  const [clickId, setClickId] = useState('');\r\n  return (\r\n    <Card className=\"menu-card\">\r\n      {props.menu.map((m) => {\r\n        return (\r\n          <div key={m._id}>\r\n            <div\r\n              className=\"menu-item\"\r\n              onClick={() => {\r\n                if (clickId === m._id) {\r\n                  return setClickId('');\r\n                }\r\n                setClickId(m._id);\r\n              }}\r\n            >\r\n              <h3 className=\"menu-heading\">{m.name}</h3>\r\n              <KeyboardArrowDownIcon />\r\n            </div>\r\n            {clickId === m._id && <MenuList meals={m.meals} id={m._id} />}\r\n          </div>\r\n        );\r\n      })}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React from 'react';\r\n\r\nimport './Quote.css';\r\n\r\nconst Quote = () => {\r\n  return (\r\n    <div className=\"quote\">\r\n      <div className=\"quote-container\">\r\n        <p>\r\n          <i>\r\n            ‚ÄúIf you really want to make a friend, go and eat with him‚Ä¶ The\r\n            people who give you their food give you their heart.‚Äù\r\n          </i>\r\n        </p>\r\n        <span>&ndash; Cesar Chavez</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quote;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport Menu from '../components/Menu/Menu';\r\nimport Quote from '../components/Quote/Quote';\r\nimport Modal from '../../Shared/UI/Modal/Modal';\r\nimport useHttp from '../../Shared/hooks/useHttp';\r\n\r\nconst Home = () => {\r\n  const [menu, setMenu] = useState([]);\r\n\r\n  const {\r\n    isLoading,\r\n    error,\r\n    sendRequest: menuFetchRequest,\r\n    clearError,\r\n  } = useHttp();\r\n\r\n  useEffect(() => {\r\n    const sendMenuRequest = async () => {\r\n      try {\r\n        const data = await menuFetchRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/menu`\r\n        );\r\n        setMenu(data);\r\n      } catch (err) {}\r\n    };\r\n\r\n    sendMenuRequest();\r\n  }, [menuFetchRequest]);\r\n\r\n  return (\r\n    <>\r\n      {error && <Modal error={error} onClose={clearError} />}\r\n      <Quote />\r\n      {isLoading && <p className=\"loading\">Loading...</p>}\r\n      {!isLoading && <Menu menu={menu} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nimport './Button.css';\r\n\r\nconst Button = (props) => {\r\n  return (\r\n    <button\r\n      type={props.type || 'button'}\r\n      onClick={props.onClick}\r\n      className={\r\n        props.disabled\r\n          ? 'disabled'\r\n          : props.inverse\r\n          ? 'button inverse'\r\n          : 'button'\r\n      }\r\n    >\r\n      {props.title}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = (props) => {\r\n  return <div className={`card ${props.className} `}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport Backdrop from '../Backdrop/Backdrop';\r\nimport Button from '../Button/Button';\r\nimport Card from '../Card/Card';\r\nimport './Modal.css';\r\n\r\nconst Overlay = (props) => {\r\n  const element = (\r\n    <div className=\"overlay\">\r\n      <Card className=\"modal-card\">\r\n        <header className={`modal-header ${props.headerClass}`}>\r\n          <h3>Oops !!üò¢</h3>\r\n        </header>\r\n        <main className={`main ${props.mainClass}`}>{props.error}</main>\r\n        <footer className={`footer ${props.footerClass}`}>\r\n          <Button title=\"Close\" onClick={props.onClose} />\r\n        </footer>\r\n      </Card>\r\n    </div>\r\n  );\r\n\r\n  return ReactDOM.createPortal(\r\n    element,\r\n    document.getElementById('overlay-root')\r\n  );\r\n};\r\n\r\nconst Modal = (props) => {\r\n  return (\r\n    <>\r\n      <Backdrop onClose={props.onClose} />\r\n      <Overlay {...props} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import { useCallback, useState, useRef, useEffect } from 'react';\r\n\r\nconst useHttp = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const activeHttpRequest = useRef([]);\r\n\r\n  const sendRequest = useCallback(\r\n    async (URL, method = 'GET', body = null, headers = {}) => {\r\n      setIsLoading(true);\r\n      const httpAbortCtrl = new AbortController();\r\n      activeHttpRequest.current.push(httpAbortCtrl);\r\n\r\n      try {\r\n        const response = await fetch(URL, {\r\n          method,\r\n          body,\r\n          headers,\r\n          signal: httpAbortCtrl.signal,\r\n        });\r\n\r\n        const data = await response.json();\r\n\r\n        activeHttpRequest.current = activeHttpRequest.current.filter(\r\n          (reqCtrl) => reqCtrl !== httpAbortCtrl\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(data.message);\r\n        }\r\n        setIsLoading(false);\r\n\r\n        return data;\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setIsLoading(false);\r\n        throw err;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = (e) => {\r\n    setError(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      activeHttpRequest.current.forEach((abortCtrl) => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n\r\n  return {\r\n    isLoading,\r\n    error,\r\n    sendRequest,\r\n    clearError,\r\n  };\r\n};\r\n\r\nexport default useHttp;\r\n"],"names":["React","props","ref","onSubmit","className","type","step","max","min","defaultValue","default","cart","Button","title","cartCtx","useContext","CartContext","menuFormRef","name","description","price","e","preventDefault","addToCart","undefined","quantity","current","value","meals","map","m","id","_id","useState","clickId","setClickId","Card","menu","onClick","KeyboardArrowDown","setMenu","useHttp","isLoading","error","menuFetchRequest","sendRequest","clearError","useEffect","sendMenuRequest","process","data","Modal","onClose","disabled","inverse","children","Overlay","element","headerClass","mainClass","footerClass","ReactDOM","document","getElementById","Backdrop","setIsLoading","setError","activeHttpRequest","useRef","useCallback","URL","method","body","headers","httpAbortCtrl","AbortController","push","fetch","signal","response","json","filter","reqCtrl","ok","Error","message","forEach","abortCtrl","abort"],"sourceRoot":""}