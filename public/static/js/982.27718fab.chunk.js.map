{"version":3,"file":"static/js/982.27718fab.chunk.js","mappings":"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","sources":["components/Cart/Components/CartItem/CartItem.js","components/Cart/Components/Cart/NewCart.js","components/Cart/Components/OrderItem/OrderItem.js","components/Cart/Components/OrderList/OrderList.js","components/Cart/Components/Orders/Orders.js","components/Cart/Components/EmptyCart/EmptyCart.js","components/Shared/UI/Input/Input.js","components/Cart/Components/OrderForm/OrderForm.js","components/Cart/Pages/Cart.js","components/Shared/UI/Button/Button.js","components/Shared/UI/Card/Card.js","components/Shared/UI/Modal/Modal.js","components/Shared/hooks/useHttp.js"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport { CartContext } from '../../../Shared/store/cart-context';\r\nimport Button from '../../../Shared/UI/Button/Button';\r\n\r\nimport './CartItem.css';\r\n\r\nconst CartItem = (props) => {\r\n  const cartCtx = useContext(CartContext);\r\n\r\n  return (\r\n    <div className=\"cart-item\">\r\n      <h4>{props.name}</h4>\r\n      <div className=\"total-price\">\r\n        <p>{props.price}</p>\r\n        <span>x</span>\r\n        <div className=\"cart-actions\">\r\n          <Button\r\n            title=\"-\"\r\n            inverse\r\n            onClick={cartCtx.removeFromCart.bind(null, props.id)}\r\n          />\r\n          <p>{props.quantity}</p>\r\n          <Button\r\n            title=\"+\"\r\n            onClick={cartCtx.addToCart.bind(null, { ...props, quantity: 1 })}\r\n          />\r\n        </div>\r\n      </div>\r\n      <h4>&#8377; {props.price * props.quantity}</h4>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartItem;\r\n","import React from 'react';\r\n\r\nimport './NewCart.css';\r\nimport CartItem from '../CartItem/CartItem';\r\nimport Card from '../../../Shared/UI/Card/Card';\r\nimport Button from '../../../Shared/UI/Button/Button';\r\n\r\nconst NewCart = (props) => {\r\n  return (\r\n    <Card className=\"new-cart\">\r\n      {props.cartItems.map((c) => (\r\n        <CartItem\r\n          key={c.id}\r\n          id={c.id}\r\n          price={c.price}\r\n          quantity={c.quantity}\r\n          name={c.name}\r\n        />\r\n      ))}\r\n      <div className=\"amount\">\r\n        <h3>Total Amount: &#8377; {props.amount} </h3>\r\n        <Button title=\"Clear Cart\" onClick={props.onClear} inverse />\r\n        <Button title=\"Order\" onClick={props.onShow} />\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default NewCart;\r\n","import React, { useEffect, useRef } from 'react';\r\n\r\nimport './OrdersItem.css';\r\n\r\nconst OrderItem = (props) => {\r\n  const itemref = useRef();\r\n\r\n  useEffect(() => {\r\n    itemref.current.scrollIntoView({ behaviour: 'smooth' });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"order-item__box\">\r\n      <p>\r\n        {props.name} x {props.quantity}\r\n      </p>\r\n      <div ref={itemref}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderItem;\r\n","import React from 'react';\r\n\r\nimport OrderItem from '../OrderItem/OrderItem';\r\nimport './OrderList.css';\r\n\r\nconst OrderList = (props) => {\r\n  return (\r\n    <div className=\"order-list\">\r\n      {props.cart.map((c) => (\r\n        <OrderItem name={c.name} quantity={c.quantity} amount={c.amount} />\r\n      ))}\r\n      <h4>&#8377; {props.amount}</h4>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderList;\r\n","import React, { useState } from 'react';\r\nimport OrderList from '../OrderList/OrderList';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport './Order.css';\r\n\r\nconst Orders = (props) => {\r\n  const [clickId, setClickId] = useState('null');\r\n\r\n  return (\r\n    <div className=\"order-container\">\r\n      <h4 className=\"order-main__heading\">\r\n        <u>ORDERS</u>\r\n      </h4>\r\n      {props.orders.map((o) => {\r\n        return (\r\n          <div key={o._id}>\r\n            <div\r\n              className=\"order-item\"\r\n              onClick={() => {\r\n                if (clickId === o._id) {\r\n                  return setClickId('');\r\n                }\r\n                setClickId(o._id);\r\n              }}\r\n            >\r\n              <h3 className=\"order-heading\">{o.name}</h3>\r\n              <KeyboardArrowDownIcon />\r\n            </div>\r\n            {clickId === o._id && (\r\n              <OrderList id={o._id} cart={o.cart} amount={o.amount} />\r\n            )}\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Orders;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport cartImage from '../../../../assets/cart.jpg';\r\nimport useHttp from '../../../Shared/hooks/useHttp';\r\nimport Button from '../../../Shared/UI/Button/Button';\r\nimport Card from '../../../Shared/UI/Card/Card';\r\nimport Modal from '../../../Shared/UI/Modal/Modal';\r\nimport Orders from '../Orders/Orders';\r\nimport './EmptyCart.css';\r\n\r\nconst EmptyCart = (props) => {\r\n  const [orders, setOrders] = useState([]);\r\n  const [showOrders, setShowOrders] = useState(props.show);\r\n  const { isLoading, error, sendRequest: fetchOrders, clearError } = useHttp();\r\n  const prevOrderHandler = async () => {\r\n    const fetchList = async () => {\r\n      if (showOrders) {\r\n        return setShowOrders(false);\r\n      }\r\n      try {\r\n        const data = await fetchOrders(\r\n          `${process.env.REACT_APP_BACKEND_URL}/order`\r\n        );\r\n        setOrders(data);\r\n        setShowOrders(true);\r\n      } catch (Err) {}\r\n    };\r\n\r\n    fetchList();\r\n  };\r\n  return (\r\n    <>\r\n      {error && <Modal error={error} onClose={clearError} />}\r\n      <Card className=\"empty-cart\">\r\n        <img src={cartImage} alt=\"empty cart\" />\r\n        <h3>Oops!! Cart is Empty</h3>\r\n        <Link to=\"/\">Visit Home to Add Delicious Food</Link>\r\n        <div className=\"order-btn\">\r\n          <Button\r\n            onClick={prevOrderHandler}\r\n            title={showOrders ? 'Close' : 'Previous 3 Orders'}\r\n          />\r\n          {!isLoading && showOrders && orders.length === 0 && (\r\n            <h1>No Orders Yet</h1>\r\n          )}\r\n          {isLoading && <p className=\"center\">Loading....</p>}\r\n        </div>\r\n      </Card>\r\n      {orders.length > 0 && showOrders && (\r\n        <Card className=\"order-card\">\r\n          {!isLoading && orders.length > 0 && showOrders && (\r\n            <Orders orders={orders} />\r\n          )}\r\n        </Card>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EmptyCart;\r\n","import React from 'react';\r\n\r\nimport './Input.css';\r\n\r\nconst Input = React.forwardRef((props, ref) => {\r\n  return (\r\n    <div className=\"form-control\">\r\n      <label htmlFor={props.for}>{props.label}</label>\r\n      {!props.textarea && (\r\n        <input type=\"text\" placeholder={props.placeholder} ref={ref} />\r\n      )}\r\n      {props.textarea && (\r\n        <textarea\r\n          rows={props.rows || 3}\r\n          placeholder={props.placeholder}\r\n          ref={ref}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Input;\r\n","import React, { useContext } from 'react';\r\nimport { CartContext } from '../../../Shared/store/cart-context';\r\n\r\nimport Button from '../../../Shared/UI/Button/Button';\r\nimport Card from '../../../Shared/UI/Card/Card';\r\nimport Input from '../../../Shared/UI/Input/Input';\r\nimport Modal from '../../../Shared/UI/Modal/Modal';\r\nimport './OrderForm.css';\r\nimport useHttp from '../../../Shared/hooks/useHttp';\r\n\r\nconst OrderForm = (props) => {\r\n  const nameRef = React.createRef();\r\n  const addressRef = React.createRef();\r\n  const instructionRef = React.createRef();\r\n\r\n  const cartCtx = useContext(CartContext);\r\n\r\n  const {\r\n    isLoading,\r\n    error,\r\n    sendRequest: sendOrderRequest,\r\n    clearError,\r\n  } = useHttp();\r\n\r\n  const submitOrderFormHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const nameValue = nameRef.current.value;\r\n    const addressValue = addressRef.current.value;\r\n    const instructionValue = instructionRef.current.value;\r\n\r\n    await sendOrderRequest(\r\n      `${process.env.REACT_APP_BACKEND_URL}/order`,\r\n      'POST',\r\n      JSON.stringify({\r\n        name: nameValue,\r\n        address: addressValue,\r\n        instructions: instructionValue,\r\n        cart: [...cartCtx.cartItems],\r\n        amount: cartCtx.totalAmount,\r\n      }),\r\n      {\r\n        'Content-Type': 'application/json',\r\n      }\r\n    );\r\n\r\n    props.clearCart();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {error && <Modal error={error} onClose={clearError} />}\r\n      <Card className=\"order\">\r\n        <form onSubmit={submitOrderFormHandler}>\r\n          <Input\r\n            for=\"name\"\r\n            label=\"Name\"\r\n            placeholder=\"Enter your Full Name\"\r\n            ref={nameRef}\r\n          />\r\n          <Input\r\n            for=\"address\"\r\n            label=\"Address\"\r\n            placeholder=\"Enter your Full Address\"\r\n            ref={addressRef}\r\n            textarea\r\n          />\r\n          <Input\r\n            for=\"insturctions\"\r\n            label=\"Special Instructions\"\r\n            placeholder=\"Any Special Instructions\"\r\n            ref={instructionRef}\r\n            textarea\r\n          />\r\n          <div className=\"center\">\r\n            <h3>Total Amount: &#8377; {props.amount} </h3>\r\n            <Button title=\"Back To Cart\" onClick={props.onBack} inverse />\r\n            <Button\r\n              type=\"submit\"\r\n              title={isLoading ? 'Proceeding...' : 'Proceed'}\r\n            />\r\n          </div>\r\n        </form>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderForm;\r\n","import React, { useContext, useState } from 'react';\r\n\r\nimport NewCart from '../Components/Cart/NewCart';\r\nimport EmptyCart from '../Components/EmptyCart/EmptyCart';\r\nimport { CartContext } from '../../Shared/store/cart-context';\r\nimport OrderForm from '../Components/OrderForm/OrderForm';\r\n\r\nconst Cart = () => {\r\n  const [showOrderForm, setShowOrderForm] = useState(false);\r\n\r\n  const cartCtx = useContext(CartContext);\r\n\r\n  return (\r\n    <>\r\n      {!showOrderForm && cartCtx.cartItems.length > 0 && (\r\n        <NewCart\r\n          cartItems={cartCtx.cartItems}\r\n          amount={cartCtx.totalAmount}\r\n          onShow={() => setShowOrderForm(true)}\r\n          onClear={cartCtx.clearCart}\r\n        />\r\n      )}\r\n      {cartCtx.cartItems.length === 0 && !showOrderForm && (\r\n        <EmptyCart show={false} />\r\n      )}\r\n      {showOrderForm && cartCtx.cartItems.length > 0 && (\r\n        <OrderForm\r\n          amount={cartCtx.totalAmount}\r\n          onBack={() => setShowOrderForm(false)}\r\n          clearCart={() => {\r\n            cartCtx.clearCart();\r\n            setShowOrderForm(false);\r\n          }}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","import React from 'react';\r\n\r\nimport './Button.css';\r\n\r\nconst Button = (props) => {\r\n  return (\r\n    <button\r\n      type={props.type || 'button'}\r\n      onClick={props.onClick}\r\n      className={\r\n        props.disabled\r\n          ? 'disabled'\r\n          : props.inverse\r\n          ? 'button inverse'\r\n          : 'button'\r\n      }\r\n    >\r\n      {props.title}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = (props) => {\r\n  return <div className={`card ${props.className} `}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport Backdrop from '../Backdrop/Backdrop';\r\nimport Button from '../Button/Button';\r\nimport Card from '../Card/Card';\r\nimport './Modal.css';\r\n\r\nconst Overlay = (props) => {\r\n  const element = (\r\n    <div className=\"overlay\">\r\n      <Card className=\"modal-card\">\r\n        <header className={`modal-header ${props.headerClass}`}>\r\n          <h3>Oops !!😢</h3>\r\n        </header>\r\n        <main className={`main ${props.mainClass}`}>{props.error}</main>\r\n        <footer className={`footer ${props.footerClass}`}>\r\n          <Button title=\"Close\" onClick={props.onClose} />\r\n        </footer>\r\n      </Card>\r\n    </div>\r\n  );\r\n\r\n  return ReactDOM.createPortal(\r\n    element,\r\n    document.getElementById('overlay-root')\r\n  );\r\n};\r\n\r\nconst Modal = (props) => {\r\n  return (\r\n    <>\r\n      <Backdrop onClose={props.onClose} />\r\n      <Overlay {...props} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import { useCallback, useState, useRef, useEffect } from 'react';\r\n\r\nconst useHttp = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const activeHttpRequest = useRef([]);\r\n\r\n  const sendRequest = useCallback(\r\n    async (URL, method = 'GET', body = null, headers = {}) => {\r\n      setIsLoading(true);\r\n      const httpAbortCtrl = new AbortController();\r\n      activeHttpRequest.current.push(httpAbortCtrl);\r\n\r\n      try {\r\n        const response = await fetch(URL, {\r\n          method,\r\n          body,\r\n          headers,\r\n          signal: httpAbortCtrl.signal,\r\n        });\r\n\r\n        const data = await response.json();\r\n\r\n        activeHttpRequest.current = activeHttpRequest.current.filter(\r\n          (reqCtrl) => reqCtrl !== httpAbortCtrl\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(data.message);\r\n        }\r\n        setIsLoading(false);\r\n\r\n        return data;\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setIsLoading(false);\r\n        throw err;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = (e) => {\r\n    setError(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      activeHttpRequest.current.forEach((abortCtrl) => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n\r\n  return {\r\n    isLoading,\r\n    error,\r\n    sendRequest,\r\n    clearError,\r\n  };\r\n};\r\n\r\nexport default useHttp;\r\n"],"names":["props","cartCtx","useContext","CartContext","className","name","price","Button","title","inverse","onClick","removeFromCart","bind","id","quantity","addToCart","Card","cartItems","map","c","amount","onClear","onShow","itemref","useRef","useEffect","current","scrollIntoView","behaviour","ref","cart","useState","clickId","setClickId","orders","o","_id","KeyboardArrowDown","setOrders","show","showOrders","setShowOrders","useHttp","isLoading","error","fetchOrders","sendRequest","clearError","prevOrderHandler","fetchList","process","data","Modal","onClose","src","cartImage","alt","to","length","React","htmlFor","for","label","textarea","type","placeholder","rows","nameRef","addressRef","instructionRef","sendOrderRequest","submitOrderFormHandler","e","preventDefault","nameValue","value","addressValue","instructionValue","JSON","stringify","address","instructions","totalAmount","clearCart","onSubmit","onBack","showOrderForm","setShowOrderForm","disabled","children","Overlay","element","headerClass","mainClass","footerClass","ReactDOM","document","getElementById","Backdrop","setIsLoading","setError","activeHttpRequest","useCallback","URL","method","body","headers","httpAbortCtrl","AbortController","push","fetch","signal","response","json","filter","reqCtrl","ok","Error","message","forEach","abortCtrl","abort"],"sourceRoot":""}